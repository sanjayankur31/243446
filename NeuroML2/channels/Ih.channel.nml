<?xml version="1.0" encoding="ISO-8859-1"?>
<neuroml xmlns="http://www.neuroml.org/schema/neuroml2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.neuroml.org/schema/neuroml2 https://raw.github.com/NeuroML/NeuroML2/development/Schemas/NeuroML2/NeuroML_v2.3.xsd" id="Ih">

    <notes>NeuroML file containing a single Channel description</notes>

    <ionChannel id="Ih" conductance="10pS" type="ionChannelHH" species="hcn">

        <notes>Non specific cation current

Created 8/6/02 - nwg

for the formulation of Angelo's data, the original parameter correspond to a maximum value of 250 ms. In their supplement data, this value is about 325 ms. So I corrected a value1.3
        </notes>

        <annotation>
            <rdf:RDF xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:bqmodel="http://biomodels.net/model-qualifiers/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" >
              <rdf:Description rdf:about="Ih">
                <dc:title>NeuroML conversion of Ih channel from Zang et al</dc:title>
                <dc:description>Non specific cation current</dc:description>
                <bqbiol:is>
                  <rdf:Bag>
                <rdf:li rdf:resource="http://uri.neuinfo.org/nif/nifstd/nifext_2516"/>
                  </rdf:Bag>
                </bqbiol:is>
                <bqbiol:isPartOf>
                  <rdf:Bag>
                    <rdf:li rdf:resource="http://uri.neuinfo.org/nif/nifstd/sao471801888"/>
                  </rdf:Bag>
                </bqbiol:isPartOf>
                <dc:source>
                  <rdf:Bag>
                    <rdf:li rdf:resource="https://modeldb.science/243446?tab=1"/>
                  </rdf:Bag>
                </dc:source>
                <dc:source>
                  <rdf:Bag>
                    <rdf:li rdf:resource="https://github.com/ModelDBRepository/243446"/>
                  </rdf:Bag>
                </dc:source>
                <bqmodel:isDerivedFrom>
                  <rdf:Bag>
                    <rdf:li rdf:resource="https://modeldb.science/80769"/>
                  </rdf:Bag>
                </bqmodel:isDerivedFrom>
                <bqmodel:isDescribedBy>
                  <rdf:Bag>
                    <rdf:li rdf:resource="https://doi.org/10.1523/JNEUROSCI.5204-05.2006"/>
                  </rdf:Bag>
                </bqmodel:isDescribedBy>
                <dc:contributor>
                  <rdf:Bag>
                    <rdf:li>Ankur Sinha</rdf:li>
                    <rdf:li>https://orcid.org/0000-0001-7568-7167</rdf:li>
                  </rdf:Bag>
                </dc:contributor>
                <dcterms:created>
                  <rdf:Description>
                    <dcterms:W3CDTF>2024-05-01</dcterms:W3CDTF>
                  </rdf:Description>
                </dcterms:created>
              </rdf:Description>
            </rdf:RDF>
        </annotation>

        <gate id="n" type="gateHHtauInf" instances="1">
            <q10Settings type="q10ExpTemp" experimentalTemp="22degC" q10Factor="3" />
            <timeCourse type="ih_tau"/>
            <steadyState type="HHSigmoidVariable" rate="1" midpoint="-96.3mV" scale="-9.67mV"/>
        </gate>
    </ionChannel>

    <!-- not standard sigmoid or exponential -->
    <ComponentType name="ih_tau" extends="baseVoltageDepTime" description="Tau for Ih">
        <Constant name="THOUSAND" dimension="none" value="1000" />
        <Constant name="ONE_POINT_THREE" dimension="none" value="1.3" />
        <Constant name="rate" dimension="per_time" value="0.62 per_ms" />
        <Constant name="midpoint" dimension="voltage" value="68 mV"/>
        <Constant name="scale1" dimension="voltage" value="-22 mV"/>
        <Constant name="scale2" dimension="voltage" value="7.14 mV"/>
        <Dynamics>

            <!-- gets scaled by qt in the gate -->
            <DerivedVariable name="t" dimension="time" exposure="t" value="THOUSAND / (rate * (exp ((v + midpoint)/scale1) + exp( (v + midpoint)/scale2)))/ ONE_POINT_THREE" />
        </Dynamics>
    </ComponentType>


</neuroml>
